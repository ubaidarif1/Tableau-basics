<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='select top/bottom customers' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <range granularity='5.0' max='20.0' min='5.0' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (SALES IN STORES)' inline='true' name='federated.1m466iy1t66vby1f65qa10aaqdjk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SALES IN STORES' name='excel-direct.11cp6dt0xvgctr10ithtv1yzvkxu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/learning/Tableau Test/SALES IN STORES.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11cp6dt0xvgctr10ithtv1yzvkxu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Store' ordinal='0' />
            <column datatype='integer' name='Sales' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11cp6dt0xvgctr10ithtv1yzvkxu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Store' ordinal='0' />
            <column datatype='integer' name='Sales' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B29:no:A1:B29:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB340BF92AE74BAA95158FAE3D6CE3D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purpose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Purpose]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Purpose</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB340BF92AE74BAA95158FAE3D6CE3D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='rankf' datatype='integer' name='[Calculation_391813219969630227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank modified' datatype='integer' name='[Calculation_391813219969826836]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_MODIFIED(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank dense' datatype='integer' name='[Calculation_391813219970015253]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank uni' datatype='integer' name='[Calculation_391813219970895895]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_EB340BF92AE74BAA95158FAE3D6CE3D6]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='D:/learning/Tableau/learning/LOD and questions/#TableauTemp_0okecyt0f6kwrm1b05azo0lsg5qs.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/19/2024 11:13:43 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Pakistan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_EB340BF92AE74BAA95158FAE3D6CE3D6'>
            <properties context=''>
              <relation connection='excel-direct.11cp6dt0xvgctr10ithtv1yzvkxu' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
                  <column datatype='string' name='Store' ordinal='0' />
                  <column datatype='integer' name='Sales' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders+' inline='true' name='federated.01f303h043kurf18gydja14xawjx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Orders' name='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog'>
            <connection class='textscan' directory='D:/learning/Tableau/learning/LOD and questions' filename='Orders.csv' password='' server='' />
          </named-connection>
          <named-connection caption='SALES IN STORES' name='excel-direct.0hxoqjd1oa4z5p16e0a9j04spzmk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/learning/Tableau/learning/SALES IN STORES.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Customers.csv' table='[Customers#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Customer Name' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Orders.csv' table='[Orders#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='integer' name='Postal Code' ordinal='7' />
              <column datatype='string' name='Product ID' ordinal='8' />
              <column datatype='real' name='Sales' ordinal='9' />
              <column datatype='integer' name='Quantity' ordinal='10' />
              <column datatype='real' name='Discount' ordinal='11' />
              <column datatype='real' name='Profit' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Customers.csv' table='[Customers#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=';'>
              <column datatype='string' name='Customer ID' ordinal='0' />
              <column datatype='string' name='Customer Name' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Location.csv' table='[Location#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='integer' name='Postal Code' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
              <column datatype='string' name='Country/Region' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Products.csv' table='[Products#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=';'>
              <column datatype='string' name='Product ID' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='string' name='Sub-Category' ordinal='2' />
              <column datatype='string' name='Product Name' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Products.csv].[Category]' />
          <map key='[City]' value='[Location.csv].[City]' />
          <map key='[Country/Region]' value='[Location.csv].[Country/Region]' />
          <map key='[Customer ID (Customers.csv)]' value='[Customers.csv].[Customer ID]' />
          <map key='[Customer ID]' value='[Orders.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Customers.csv].[Customer Name]' />
          <map key='[Discount]' value='[Orders.csv].[Discount]' />
          <map key='[Order Date]' value='[Orders.csv].[Order Date]' />
          <map key='[Order ID]' value='[Orders.csv].[Order ID]' />
          <map key='[Postal Code (Location.csv)]' value='[Location.csv].[Postal Code]' />
          <map key='[Postal Code]' value='[Orders.csv].[Postal Code]' />
          <map key='[Product ID (Products.csv)]' value='[Products.csv].[Product ID]' />
          <map key='[Product ID]' value='[Orders.csv].[Product ID]' />
          <map key='[Product Name]' value='[Products.csv].[Product Name]' />
          <map key='[Profit]' value='[Orders.csv].[Profit]' />
          <map key='[Quantity]' value='[Orders.csv].[Quantity]' />
          <map key='[Region]' value='[Location.csv].[Region]' />
          <map key='[Row ID]' value='[Orders.csv].[Row ID]' />
          <map key='[Sales]' value='[Orders.csv].[Sales]' />
          <map key='[Segment]' value='[Orders.csv].[Segment]' />
          <map key='[Ship Date]' value='[Orders.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders.csv].[Ship Mode]' />
          <map key='[State]' value='[Location.csv].[State]' />
          <map key='[Sub-Category]' value='[Products.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Location.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID (Customers.csv)]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Customers.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code (Location.csv)]</local-name>
            <parent-name>[Location.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Location.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Location.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Location.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID (Products.csv)]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Products.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Include LOD(sales)' datatype='real' name='[Calculation_391813218538090496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Sub-Category]:AVG([Sales])}' />
      </column>
      <column caption='include LOD(avg sales by customer)' datatype='real' name='[Calculation_391813218539909121]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Customer Name]:AVG([Sales])}' />
      </column>
      <column caption='cal1' datatype='string' name='[Calculation_391813218579816450]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LEFT([Category],3)' />
      </column>
      <column aggregation='Sum' caption='cal2' datatype='integer' name='[Calculation_391813218579959811]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='LEN(LEFT([Category],3)) * 2' />
      </column>
      <column caption='Bookcases' datatype='real' name='[Calculation_391813218862972932]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Sub-Category]=&quot;Bookcases&quot; THEN [Sales]&#13;&#10;END' />
      </column>
      <column aggregation='Attribute' caption='Exclude Bookcases' datatype='real' name='[Calculation_391813218863828997]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [Sub-Category]: SUM([Calculation_391813218862972932])}' />
      </column>
      <column caption='sales_diff_BC' datatype='real' name='[Calculation_391813218864697350]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])-SUM([Calculation_391813218863828997])' />
      </column>
      <column aggregation='Sum' caption='Fixed sales by ctegory' datatype='real' name='[Calculation_391813218872098823]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED [Category]:SUM([Sales])}' />
      </column>
      <column aggregation='Attribute' caption='Exclude region' datatype='real' name='[Calculation_391813218873577480]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [Region]:SUM([Sales])}' />
      </column>
      <column caption='Profit Ratio' datatype='real' name='[Calculation_391813219933765643]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(Profit)/SUM(Sales)' />
      </column>
      <column caption='profit Rank ' datatype='integer' name='[Calculation_391813219941965839]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='shipping delay' datatype='integer' name='[Calculation_391813219981389848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, [Order Date],[Ship Date])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Customer Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Adrian Barton, Christopher Martinez, Hunter Lopez and 4 more&quot;'>
            <value>&quot;Adrian Barton&quot;</value>
            <value>&quot;Christopher Martinez&quot;</value>
            <value>&quot;Hunter Lopez&quot;</value>
            <value>&quot;Raymond Buch&quot;</value>
            <value>&quot;Sanjit Chand&quot;</value>
            <value>&quot;Tamara Chand&quot;</value>
            <value>&quot;Tom Ashbrook&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Cindy Stewart, Grant Thornton, Henry Goldwyn and 4 more&quot;'>
            <value>&quot;Cindy Stewart&quot;</value>
            <value>&quot;Grant Thornton&quot;</value>
            <value>&quot;Henry Goldwyn&quot;</value>
            <value>&quot;Luke Foster&quot;</value>
            <value>&quot;Nathan Cano&quot;</value>
            <value>&quot;Sean Braxton&quot;</value>
            <value>&quot;Sharelle Roach&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code (Location.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Customers.csv' datatype='table' name='[__tableau_internal_object_id__].[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Location.csv' datatype='table' name='[__tableau_internal_object_id__].[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders.csv' datatype='table' name='[__tableau_internal_object_id__].[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Products.csv' datatype='table' name='[__tableau_internal_object_id__].[Products.csv_42E373890DCA4F96A110F7341FF67498]' role='measure' type='quantitative' />
      <column caption='profit Rank mod' datatype='integer' name='[profit Rank  (copy)_391813219942400016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_MODIFIED(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Min' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Min' ordering-field='[federated.01f303h043kurf18gydja14xawjx].[qr:Order Date:ok]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[diff:sum:Profit:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[diff:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.01f303h043kurf18gydja14xawjx].[Customer Name]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_391813219933765643]' derivation='Sum' name='[sum:Calculation_391813219933765643:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_391813219981389848]' derivation='Sum' name='[sum:Calculation_391813219981389848:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_391813219933765643]' derivation='User' name='[usr:Calculation_391813219933765643:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[win:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Customer Name Set 2' name='[Customer Name Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Customer Name Set' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='top n bottom 10' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Customer Name Set]' function='reference' />
          <groupfilter field='[Customer Name Set 2]' function='reference' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ubaid/AppData/Local/Temp/TableauTemp/#TableauTemp_17oz8nk13ttlie13z63sr14kxpt7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/22/2024 08:33:29 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E' table='[Extract].[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52' table='[Extract].[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]' type='table' />
            <relation name='Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E' table='[Extract].[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]' type='table' />
            <relation name='Location.csv_50D8D6DA80984BEDBDC7D8586A709E70' table='[Extract].[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]' type='table' />
            <relation name='Products.csv_42E373890DCA4F96A110F7341FF67498' table='[Extract].[Products.csv_42E373890DCA4F96A110F7341FF67498]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Category]' value='[Products.csv_42E373890DCA4F96A110F7341FF67498].[Category]' />
            <map key='[City]' value='[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70].[City]' />
            <map key='[Country/Region]' value='[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70].[Country/Region]' />
            <map key='[Customer ID (Customers.csv)]' value='[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E].[Customer ID]' />
            <map key='[Customer ID]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Customer ID]' />
            <map key='[Customer Name]' value='[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E].[Customer Name]' />
            <map key='[Discount]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Discount]' />
            <map key='[Order Date]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Order Date]' />
            <map key='[Order ID]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Order ID]' />
            <map key='[Postal Code (Location.csv)]' value='[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70].[Postal Code]' />
            <map key='[Postal Code]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Postal Code]' />
            <map key='[Product ID (Products.csv)]' value='[Products.csv_42E373890DCA4F96A110F7341FF67498].[Product ID]' />
            <map key='[Product ID]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Product ID]' />
            <map key='[Product Name]' value='[Products.csv_42E373890DCA4F96A110F7341FF67498].[Product Name]' />
            <map key='[Profit]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Profit]' />
            <map key='[Quantity]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Quantity]' />
            <map key='[Region]' value='[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70].[Region]' />
            <map key='[Row ID]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Row ID]' />
            <map key='[Sales]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Sales]' />
            <map key='[Segment]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Segment]' />
            <map key='[Ship Date]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52].[Ship Mode]' />
            <map key='[State]' value='[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70].[State]' />
            <map key='[Sub-Category]' value='[Products.csv_42E373890DCA4F96A110F7341FF67498].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3377</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1405</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1538</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1130</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>676</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2116</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3819</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID (Customers.csv)]</local-name>
              <parent-name>[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Customers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>793</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>14</ordinal>
              <family>Customers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>793</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code (Location.csv)]</local-name>
              <parent-name>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>15</ordinal>
              <family>Location.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>631</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>16</ordinal>
              <family>Location.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>531</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>17</ordinal>
              <family>Location.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>18</ordinal>
              <family>Location.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>19</ordinal>
              <family>Location.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID (Products.csv)]</local-name>
              <parent-name>[Products.csv_42E373890DCA4F96A110F7341FF67498]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>20</ordinal>
              <family>Products.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1614</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Products.csv_42E373890DCA4F96A110F7341FF67498]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>21</ordinal>
              <family>Products.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Products.csv_42E373890DCA4F96A110F7341FF67498]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>22</ordinal>
              <family>Products.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Products.csv_42E373890DCA4F96A110F7341FF67498]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>23</ordinal>
              <family>Products.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1637</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Products.csv_42E373890DCA4F96A110F7341FF67498]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[cum:sum:Profit:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[cum:sum:Profit:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[cum:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[diff:sum:Profit:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[diff:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Calculation_391813219981389848:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[win:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Calculation_391813219933765643:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[diff:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[diff:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Customer Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Adrian Barton, Christopher Martinez, Hunter Lopez and 4 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cindy Stewart, Grant Thornton, Henry Goldwyn and 4 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select top/bottom customers' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <range granularity='5.0' max='20.0' min='5.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Customers.csv' id='Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E'>
            <properties context=''>
              <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Customers.csv' table='[Customers#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=';'>
                  <column datatype='string' name='Customer ID' ordinal='0' />
                  <column datatype='string' name='Customer Name' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E' table='[Extract].[Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E]' type='table' />
            </properties>
          </object>
          <object caption='Location.csv' id='Location.csv_50D8D6DA80984BEDBDC7D8586A709E70'>
            <properties context=''>
              <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Location.csv' table='[Location#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='integer' name='Postal Code' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                  <column datatype='string' name='Country/Region' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Location.csv_50D8D6DA80984BEDBDC7D8586A709E70' table='[Extract].[Location.csv_50D8D6DA80984BEDBDC7D8586A709E70]' type='table' />
            </properties>
          </object>
          <object caption='Orders.csv' id='Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52'>
            <properties context=''>
              <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Orders.csv' table='[Orders#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Segment' ordinal='6' />
                  <column datatype='integer' name='Postal Code' ordinal='7' />
                  <column datatype='string' name='Product ID' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52' table='[Extract].[Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52]' type='table' />
            </properties>
          </object>
          <object caption='Products.csv' id='Products.csv_42E373890DCA4F96A110F7341FF67498'>
            <properties context=''>
              <relation connection='textscan.0xvr1dl08upnwj1dzlcoa1pjoqog' name='Products.csv' table='[Products#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=';'>
                  <column datatype='string' name='Product ID' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='string' name='Sub-Category' ordinal='2' />
                  <column datatype='string' name='Product Name' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Products.csv_42E373890DCA4F96A110F7341FF67498' table='[Extract].[Products.csv_42E373890DCA4F96A110F7341FF67498]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Customer ID]' />
              <expression op='[Customer ID (Customers.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52' />
            <second-end-point object-id='Customers.csv_7E9BE17740494CF6A3A5450C7D915B5E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Postal Code]' />
              <expression op='[Postal Code (Location.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52' />
            <second-end-point object-id='Location.csv_50D8D6DA80984BEDBDC7D8586A709E70' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Product ID]' />
              <expression op='[Product ID (Products.csv)]' />
            </expression>
            <first-end-point object-id='Orders.csv_BA0460FF04D640E1B3E7F62F1C2EAA52' />
            <second-end-point object-id='Products.csv_42E373890DCA4F96A110F7341FF67498' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hyperlink1' name='[Action1_F2EB1EF53E884278BDD431EA533F5492]'>
      <activation type='on-select' />
      <source dashboard='q23 use web ' type='sheet' worksheet='q23' />
      <link caption='' expression='https://www.wikipedia.org/&lt;[State]&gt;' />
    </action>
    <datasources>
      <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
    </datasources>
    <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='#2 product'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk]' included-values='in-range' />
          <slices>
            <column>[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Ship Mode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.01f303h043kurf18gydja14xawjx].[none:Ship Mode:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank of Sales along Table (Down):	</run>
                <run bold='true'><![CDATA[<[federated.01f303h043kurf18gydja14xawjx].[rank:sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>find the #2 product in first class ship mode</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{2AA90C59-EED0-43D9-BD34-3D747C0F242B}' />
    </worksheet>
    <worksheet name='Exclude bookcases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column caption='Bookcases' datatype='real' name='[Calculation_391813218862972932]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Sub-Category]=&quot;Bookcases&quot; THEN [Sales]&#13;&#10;END' />
            </column>
            <column aggregation='Attribute' caption='Exclude Bookcases' datatype='real' name='[Calculation_391813218863828997]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [Sub-Category]: SUM([Calculation_391813218862972932])}' />
            </column>
            <column caption='sales_diff_BC' datatype='real' name='[Calculation_391813218864697350]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([Calculation_391813218863828997])' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_391813218864697350]' derivation='User' name='[usr:Calculation_391813218864697350:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' value='n&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' value='n&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813218864697350:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813218864697350:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk]</rows>
        <cols>([federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk] + [federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813218864697350:qk])</cols>
      </table>
      <simple-id uuid='{FFAE0AD3-3578-4DAE-B780-EFAD751D1DC2}' />
    </worksheet>
    <worksheet name='Lowest profit customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_391813219933765643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(Profit)/SUM(Sales)' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_391813219933765643]' derivation='User' name='[usr:Calculation_391813219933765643:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{A00FBC61-7508-4FC7-A9CE-43DDAB2E7EEE}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <lod column='[federated.01f303h043kurf18gydja14xawjx].[none:State:nk]' />
              <geometry column='[federated.01f303h043kurf18gydja14xawjx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[Latitude (generated)]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{79F68F96-EF41-41A8-8067-22DD74786911}' />
    </worksheet>
    <worksheet name='Sheet for LOD&apos;s'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column caption='include LOD(avg sales by customer)' datatype='real' name='[Calculation_391813218539909121]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Customer Name]:AVG([Sales])}' />
            </column>
            <column aggregation='Sum' caption='Fixed sales by ctegory' datatype='real' name='[Calculation_391813218872098823]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED [Category]:SUM([Sales])}' />
            </column>
            <column aggregation='Attribute' caption='Exclude region' datatype='real' name='[Calculation_391813218873577480]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [Region]:SUM([Sales])}' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_391813218873577480]' derivation='Attribute' name='[attr:Calculation_391813218873577480:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_391813218539909121]' derivation='Avg' name='[avg:Calculation_391813218539909121:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_391813218872098823]' derivation='None' name='[none:Calculation_391813218872098823:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01f303h043kurf18gydja14xawjx].[attr:Calculation_391813218873577480:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01f303h043kurf18gydja14xawjx].[avg:Calculation_391813218539909121:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[attr:Calculation_391813218873577480:qk]&quot;</bucket>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.01f303h043kurf18gydja14xawjx].[avg:Calculation_391813218539909121:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Customer Name:nk]' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.01f303h043kurf18gydja14xawjx].[none:Region:nk]' direction='DESC' measure-to-sort-by='[federated.01f303h043kurf18gydja14xawjx].[none:Region:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]</column>
            <column>[federated.01f303h043kurf18gydja14xawjx].[none:Region:nk]</column>
            <column>[federated.01f303h043kurf18gydja14xawjx].[none:Category:nk]</column>
            <column>[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[none:Calculation_391813218872098823:ok]' value='n#,##0;-#,##0' />
            <format attr='width' field='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' value='184' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.01f303h043kurf18gydja14xawjx].[none:Calculation_391813218872098823:ok]' value='140' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[none:Calculation_391813218872098823:ok]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01f303h043kurf18gydja14xawjx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01f303h043kurf18gydja14xawjx].[none:Category:nk] / ([federated.01f303h043kurf18gydja14xawjx].[none:Region:nk] / [federated.01f303h043kurf18gydja14xawjx].[none:Calculation_391813218872098823:ok]))</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5A3B92A8-F67C-4382-A6E0-8E23A4D06268}' />
    </worksheet>
    <worksheet name='blended axis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[Multiple Values]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{1C81E15F-AB8F-4783-BCA8-4FE0989F604E}' />
    </worksheet>
    <worksheet name='dual axis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk] + [federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk])</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{BBCED396-ECEA-45AF-B590-2B927FCB9BE5}' />
    </worksheet>
    <worksheet name='dual axis ratio'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_391813219933765643]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(Profit)/SUM(Sales)' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_391813219933765643]' derivation='User' name='[usr:Calculation_391813219933765643:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk] + [federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813219933765643:qk])</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{58B027A9-78B6-4AD6-B104-517F09A56C95}' />
    </worksheet>
    <worksheet name='heat'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01f303h043kurf18gydja14xawjx].[none:Category:nk] / [federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk])</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{94059A75-1AC7-4522-9386-EEE28666724D}' />
    </worksheet>
    <worksheet name='q11 groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Adrian Barton, Christopher Martinez, Hunter Lopez and 4 more&quot;'>
                  <value>&quot;Adrian Barton&quot;</value>
                  <value>&quot;Christopher Martinez&quot;</value>
                  <value>&quot;Hunter Lopez&quot;</value>
                  <value>&quot;Raymond Buch&quot;</value>
                  <value>&quot;Sanjit Chand&quot;</value>
                  <value>&quot;Tamara Chand&quot;</value>
                  <value>&quot;Tom Ashbrook&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Cindy Stewart, Grant Thornton, Henry Goldwyn and 4 more&quot;'>
                  <value>&quot;Cindy Stewart&quot;</value>
                  <value>&quot;Grant Thornton&quot;</value>
                  <value>&quot;Henry Goldwyn&quot;</value>
                  <value>&quot;Luke Foster&quot;</value>
                  <value>&quot;Nathan Cano&quot;</value>
                  <value>&quot;Sean Braxton&quot;</value>
                  <value>&quot;Sharelle Roach&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[Customer Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer Name (group)]' />
              <groupfilter function='member' level='[Customer Name (group)]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01f303h043kurf18gydja14xawjx].[Customer Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[Customer Name (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{93332D31-5A34-4119-B5F6-80B78D3AC814}' />
    </worksheet>
    <worksheet name='q12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select top/bottom customers' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='5.0' max='20.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[Set 1]' />
          <filter class='categorical' column='[federated.01f303h043kurf18gydja14xawjx].[io:Set 1:nk]'>
            <groupfilter function='level-members' level='[io:Set 1:nk]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01f303h043kurf18gydja14xawjx].[Set 1]</column>
            <column>[federated.01f303h043kurf18gydja14xawjx].[io:Set 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[none:Customer Name:nk]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{E5F81727-4AD8-4E15-85BB-6237D3E30D07}' />
    </worksheet>
    <worksheet name='q22'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (SALES IN STORES)' name='federated.1m466iy1t66vby1f65qa10aaqdjk' />
          </datasources>
          <datasource-dependencies datasource='federated.1m466iy1t66vby1f65qa10aaqdjk'>
            <column caption='rankf' datatype='integer' name='[Calculation_391813219969630227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='rank modified' datatype='integer' name='[Calculation_391813219969826836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_MODIFIED(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='rank dense' datatype='integer' name='[Calculation_391813219970015253]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='rank uni' datatype='integer' name='[Calculation_391813219970895895]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_391813219969630227]' derivation='User' name='[usr:Calculation_391813219969630227:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_391813219969826836]' derivation='User' name='[usr:Calculation_391813219969826836:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_391813219970015253]' derivation='User' name='[usr:Calculation_391813219970015253:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_391813219970895895]' derivation='User' name='[usr:Calculation_391813219970895895:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m466iy1t66vby1f65qa10aaqdjk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[usr:Calculation_391813219969630227:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[usr:Calculation_391813219969826836:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[usr:Calculation_391813219970015253:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[usr:Calculation_391813219970895895:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1m466iy1t66vby1f65qa10aaqdjk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[usr:Calculation_391813219969630227:qk]&quot;</bucket>
              <bucket>&quot;[federated.1m466iy1t66vby1f65qa10aaqdjk].[usr:Calculation_391813219969826836:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1m466iy1t66vby1f65qa10aaqdjk].[none:Store:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;E&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1m466iy1t66vby1f65qa10aaqdjk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1m466iy1t66vby1f65qa10aaqdjk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m466iy1t66vby1f65qa10aaqdjk].[none:Store:nk]</rows>
        <cols>[federated.1m466iy1t66vby1f65qa10aaqdjk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{654FAECA-3753-4249-BD9D-699B3AFAC30F}' />
    </worksheet>
    <worksheet name='q23'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01f303h043kurf18gydja14xawjx].[Longitude (generated)]' field-type='quantitative' max='27420.70437736623' min='-21368591.603846639' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01f303h043kurf18gydja14xawjx].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[none:State:nk]' />
              <lod column='[federated.01f303h043kurf18gydja14xawjx].[none:State:nk]' />
              <geometry column='[federated.01f303h043kurf18gydja14xawjx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[Latitude (generated)]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7AA6DB1E-1E07-4472-82C2-D719AE38587D}' />
    </worksheet>
    <worksheet name='q24'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.01f303h043kurf18gydja14xawjx].[none:State:nk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <lod column='[federated.01f303h043kurf18gydja14xawjx].[none:State:nk]' />
              <geometry column='[federated.01f303h043kurf18gydja14xawjx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[Latitude (generated)]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D89850F-1493-4A91-ADB5-1784359DDB33}' />
    </worksheet>
    <worksheet name='q26.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <lod column='[federated.01f303h043kurf18gydja14xawjx].[none:Category:nk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EA17E2D6-FF80-44B3-A232-4E0FB3BD062B}' />
    </worksheet>
    <worksheet name='q26.2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column caption='shipping delay' datatype='integer' name='[Calculation_391813219981389848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, [Order Date],[Ship Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_391813219981389848]' derivation='Sum' name='[sum:Calculation_391813219981389848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week' name='[wk:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01f303h043kurf18gydja14xawjx].[none:Order Date:qk]' included-values='in-range'>
            <min>#2020-01-03#</min>
            <max>#2023-12-30#</max>
          </filter>
          <slices>
            <column>[federated.01f303h043kurf18gydja14xawjx].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[none:Ship Mode:nk]' />
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Calculation_391813219981389848:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk] / [federated.01f303h043kurf18gydja14xawjx].[none:Ship Mode:nk])</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[wk:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{370AA09E-09F9-4A87-94AD-2CB5366FFD3B}' />
    </worksheet>
    <worksheet name='q26.3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01f303h043kurf18gydja14xawjx].[cum:sum:Profit:qk]</rows>
        <cols>[federated.01f303h043kurf18gydja14xawjx].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{9FB1B92C-A755-41A6-899B-865357E929DF}' />
    </worksheet>
    <worksheet name='rank functions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7611EAEB-5242-4019-8167-F985B9D15B38}' />
    </worksheet>
    <worksheet name='tree'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+' name='federated.01f303h043kurf18gydja14xawjx' />
          </datasources>
          <datasource-dependencies datasource='federated.01f303h043kurf18gydja14xawjx'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' />
              <color column='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[none:Category:nk]' />
              <text column='[federated.01f303h043kurf18gydja14xawjx].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E965E3FB-4449-4A9A-8AB8-B0341B0E3D9A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='q23 use web '>
      <style />
      <size maxheight='700' maxwidth='1550' minheight='700' minwidth='1550' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='7' param='horz' type-v2='layout-flow' w='98968' x='516' y='1143'>
            <zone h='97714' id='5' type-v2='layout-basic' w='98968' x='516' y='1143'>
              <zone h='48857' id='3' name='q23' w='98968' x='516' y='1143'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='' h='48857' id='8' param='https://www.wikipedia.org/Nebraska' type-v2='web' w='98968' x='516' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='37' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='48857' id='3' is-fixed='true' name='q23' w='98968' x='516' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' forceUpdate='' h='48857' id='8' is-fixed='true' param='https://www.wikipedia.org/Nebraska' type-v2='web' w='98968' x='516' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4045835D-2716-4396-A7FD-406EBADE4932}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Exclude bookcases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.01f303h043kurf18gydja14xawjx].[usr:Calculation_391813218864697350:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{2FE5538A-77B5-40E9-A00E-7395B24A74F5}' />
    </window>
    <window class='worksheet' name='Sheet for LOD&apos;s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{65F38C85-1DEB-4E70-999A-BFDB1EA59E2A}' />
    </window>
    <window class='worksheet' name='q11 groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[Customer Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{24DDF3AB-8EF0-485C-8B04-050DDC0C645E}' />
    </window>
    <window class='worksheet' maximized='true' name='q12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8A49407C-7138-4A2F-96ED-87D87593C8C5}' />
    </window>
    <window class='worksheet' name='heat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8ED1A3CA-0A25-470C-BB89-DD394DAC1823}' />
    </window>
    <window class='worksheet' name='tree'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5843F771-38D5-4130-89D2-6227E88971DE}' />
    </window>
    <window class='worksheet' name='blended axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B21C9336-CBA9-4155-9F1D-2857BB2D43D7}' />
    </window>
    <window class='worksheet' name='dual axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{766C1896-7C41-4F26-8FF9-20C5A41EEC66}' />
    </window>
    <window class='worksheet' name='dual axis ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.01f303h043kurf18gydja14xawjx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{893D5565-D6EE-423F-BB6D-5B49E6D7463D}' />
    </window>
    <window class='worksheet' name='#2 product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B1B27D6D-0BFF-4E2E-870F-772FC6EB1ADF}' />
    </window>
    <window class='worksheet' name='Lowest profit customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{92CE7F77-E8AC-4E31-B38B-8771009A9C38}' />
    </window>
    <window class='worksheet' name='rank functions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D7F68739-D2CC-4167-8E1D-7A13CBD7763F}' />
    </window>
    <window class='worksheet' name='q22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7A8C93BF-8A85-43D5-913E-1B7E6007EF3C}' />
    </window>
    <window class='worksheet' name='q23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D56C65BA-DEAE-453F-864A-07C98BA16520}' />
    </window>
    <window class='dashboard' name='q23 use web '>
      <viewpoints>
        <viewpoint name='q23'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{69500169-760D-4D88-85CD-E769812801F7}' />
    </window>
    <window class='worksheet' name='q24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{945F854C-4C97-4D7E-A77C-2261B463F017}' />
    </window>
    <window class='worksheet' name='q26.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{35E53605-521B-4D5F-AF36-61760E33486D}' />
    </window>
    <window class='worksheet' name='q26.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F723273-E923-4328-B08E-7742BE3B2772}' />
    </window>
    <window class='worksheet' name='q26.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7E9410EF-0386-4C49-9458-55116478BFB1}' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.01f303h043kurf18gydja14xawjx].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C5260DA-EC52-49E3-98E5-359CF8CBA784}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='#2 product' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Lowest profit customer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Sheet for LOD&apos;s' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='blended axis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbFElEQVR4nO3dd5Rc12Hf8e+bPrtTtvfegQWwAAiCpEhIpBhKECmrRcWxLdGydHwcR3Ki
      KOfER1LoE0tWHJ3IJ9aRdJw40XFUQ9kqlqLKAooiBYIg+mKxvWJ3dmdmd9pOe+3mjwXAIhJc
      DGYL9t3PP1hMu3dm3u/Nfffde58ihBBIkkXZtroCkrSVZAAkS5MBkCxNBkCyNBkAybLU1JIM
      gGRdofEhGQDJuoIV5SjyPIBkXUL+AkhWpmxeAEzTxDTNzSpOktZl0wIgW1rSdiSbQJKlyQBI
      liYDIFmaDIBkaTIAkqXJAEiWVmAABImVKNGVBAKDcCjEcjyFrmYJR1YQGKiqjpbPopuy+1Pa
      vhwFPUvoJBMplpcWUHpbGZldpafTy9jwKIpikjaa0BMmeTVG7+7+IldZkoqnsAAoTlx2nYTm
      oFtR0NQYi1E3XrePru4mxsammDg/Se89R3DYQNf1a2eBFUUpZv0l6aYUNhhOyzI8MU02sUyw
      sYtccoVU1iDgzJNX85S3dqHFTfLZCB279uB12jAMA0VRsNnkYYe0fRQWAGGSTqcxFQe+Ejer
      qRQubykOxSST0/D5vBi6QMEEmwO7TZEBkLalTRsOLQMgbUdya5QsTQZAsjQZAMnSZAAkS5MB
      kCxNBkCyNBkAydJkACRLkwGQLE0GQLI0GQDJ0mQAJEuTAZAsTQZAsjQZAMnSZAAkS5MBkCxN
      BkCytIKXRbl0/jwp3c7Ani7OnzlPRVMXQSXF6GyUgUN7WF0xQFshUNeC1yFXgpC2p4InxSdj
      K8xMTeP1lhLs6GZpfARFEfR01DA+nyAVSuBvqKOvoxEhhFwWRdqWCm4CCWHidNnJa+ZLNmoF
      RbGBEBiGJq8II217hTWB9DzTM7PkDRv9/S0Mnj5BVVMXflI8f2aCfbftpdxfh82IkVZNfG47
      Qgi5KoS07chlUSRLk1ujZGkyAJKlyQBIliYDIFmaDIBkaTIAkqXJAEiWJgMgWZoMgGRpMgCS
      pckASJYmAyBZmgyAZGkyAJKlyQBIliYDIFmaDIBkaTIAkqUVHABNzZPN5RGYZNNpcnkV09DJ
      ZHMIBIZhYho65ubMuJSkghQ2KR6NyZFRUqtx2vo6OX16jq6eNrTYHMlMhtquPtSYQT4boat/
      L257cSstScVSYAActLQ1MjPvpVRo4BDkNQ27289te3YxNjbFxIVJ+u4+gssGuq7LdYGkbanA
      hbHyPP/cGepbWvF7nSTTWUJLy/icBm63gi1Yj54wyKtxevp347bb5KoQ0rZUWABMnVBoEc2E
      mtpaYpFFfOU1eO064ViG+roK1LzAhoqwe3A5ZACk7UmuCyRZmtwaJUuTAZAsTQZAsjQZAMnS
      ZAAkS5MBkCxNBkCyNBkAydJkACRLkwGQLE0GQLI0GQDJ0mQAJEuTAZAsTQZAsjQZAMnSZAAk
      S5MB2EZWkllOXprf6mpYSsEByKTiRFcSCASxaJisqqOrWcLRGAIDVdXR8jl0U64LtF6PPnmR
      L/zf3/CjZ0fYpJmqllfwukBLoQjpVJTVRB3RdB7mo5QqWVBM0noTesIkr8bo3d1f3BrvUCvJ
      LKfHQnz0oQN867EL+Etc3Lu/TS4js8EKDICTmpoglxUniqrS19/L/PAIwuajp7tpbV2g85P0
      3nMEh1wXaF2eOjNJTVkJbxpopirg5W+/9zylbgcHuuu2umo72nVXhTC0BF965EsMvP1NtHcf
      oL3Gv3aHmeVXT52gtrGBap+TkcUkLocLn5Imp6mUN3eiJkzUbISOXXvwOuWyKNejGyaf+PIv
      +OBb9nF4VyMALwwv8KXvneDfve9ODvbUb3ENd67X+QWwEyzzMDI2w+69d7x4s+Lm4G0HMACf
      z89AYBWn14cdnXRWw+/3YlQIFKoQNrnHfz2nRhYwTZM97TXXbrutt57ff2AfX/nBSR55+I20
      1pVtYQ13rusGQLFBc18XMdWOw/7yO/zB4Isv4g9c+ctFwO9au80BIBcFfT2mKfjZiXHuP9hB
      icd57XZFUXjgUAeqrvO5b/yav/jDN9FUHbjOK0mFuG57xGb38cA7382BzmpSGW2z6mQplyNJ
      xudXePPB9t+6z2ZTeOjOHu7e08x/+eYzrCSzW1DDne26ATCNVZ786U+ZiGnUBr2bVSfLEELw
      0+fGuHN3E0Gf+1UfY7MpPHx0gH2dtfz1t54hlsptci13ttcMQG41zA8f/RGL8TgrS1FWVfkL
      UGzx1Twnhxc4ekfXdXvHFEXhw2/bT1WwhL/57nEyOfldFMtrBsDjq+Gd73sH+VCIjJZDNzez
      WjufEIIfPH2JvR01dDVWvO7jXU47H/+XhznU28Cn/v4J5sLJTajlzveaARBCYJo5PE43mWyO
      bFbudYopvprj+MXLPHRX97qf43U7+Z039LC/q47Pff1peUxQBK8ZgHw6ws9//DTV+/bz4INv
      o+PqOQCpKJ46M01dpY/upsobet7VY4ID3XX89befIb4qjwluxnWbQEff/haqSgQ//MY3mFxe
      3cx67WiabvCrczM8dOf69/4vpSgKf/TQAWrLfXzh28+ymlWLXEPruO5B8GM/fwpRUsVH/uxj
      dFT6NrNeO9rgVBjTFOzrrC34NVwOO3/yztvwuh185QfPo+pGEWtoHfICGZtMCMHnv/kMPU0V
      vO++mx8ouJpV+dzXn6auwsfH3nMYh93an++Nkp/WJgstrzI0HeGB2zuL8no+r4v/+Ht3M3p5
      mW89dgFTDj+/ITIAm0gIwc9OjHFXfxPB0lc/8VWIcr+X//zhezk5PM93j13EMGWf9XrJAGyi
      ZDrPc0PzPHCoo+jDwqvLSvnkB+7i8Rcm+dlz40V97Z1MBmATnbg0T4XfQ29L1Ya8fnt9OZ/8
      wF18/+lLPHN+Vs4qWwcZgE2iagY/e26Mtx7u2tBydrVV82fvvYOv/vAkp0dDG1rWTiADsEkG
      p8LkNIM37Gne8LIGOmv51+88xJd/cJLhmeiGl3crkwHYBGsHv+Pcs7cFj6vAWag3QFEUjgy0
      8nv/Yi//7dHfMDK3vOFl3qo2/tuQmI+kmJhf4Y8e3L+p5d5/WzsryQx/8+hx/vIj91JbvvUn
      M4UQqLpBJJ4hmc7jdtrxuBw4HDZK3S4UGygoa+eMlLUwK6/411bEDgQZgE3wxOlJ+ttrqK/c
      3PFUNkXhvffuRtNN/vIfnuazH7mPisDWzOuIpbKcn1ji7PgS5yeW0HSDQKmbvGqQ03R0wySb
      01AUBYfDhsthx+W043basdtsuJ32a7e5nHacDjsOuw2P047b5cDjcuB02HA7HbhdjrXHX3mO
      w371djulHif+Ejc+79rMxQLPBBtMXDhF1tfKngbBTx4fpr2vE2c2TCgap2tggOyygZpboq1v
      L16HYtkzwdm8xke/8GM+86Ej7Gqt3pI66IbJ3/3zC0wvxnnk4TcRKOI5iNeymlWZWUpwejTE
      4OQSC8urNFT6ONhTz96OWrqaKrDbFBBwdQMUQmCYAk03yKk6ec0gr+pohkle1cmpBnlNv3ab
      ppvX/p+79ri1QOVVHU030AwTXTcxTIFurD0+m9cxTYHP67qJoRC5GOPLBm2eJL88v0Rvdyf6
      6grd3Y2Mjs8ydXGanjvvoqO+HMMwLLssyrEzMxw7M80jDx/Z0mEKmm7wpe+dRDNMPv6e2yl9
      yfzjYlB1g2g8w9DsMhcmwozMLeN1OehqKmdvezV72msIlLo3/TMwzbVQCSEwxVoIdN0kk9eI
      pXKFBkCQXQkxvmLQVlWKho2xsUlKXFBT4SWp+DGTBjk9Tf+eXThs1vwFUDWDP/8fj/PQXT3c
      f9tvz/ndbJm8xhe+/Sxup4NPvP/OmzogN4VgNaMyPr/CufFFzo4vsZpVqavwcahvbS/fVB3Y
      lIP+m1Fg7QxC4QSKIcBZyfLsNF29ffjtKtOLCbo6a8mmBQ5yaLrA4bLWXv+qscsrLCezHBlo
      2eqqAFDidvKJ99/JZ//P03ztJ2f403fffkPPNwyThWiK02Mhzo4vMTIbpczn4fa+Bn73/n72
      tNfgL9n45lUxydGgG0QIwX/99rO01Ab5V/fv2VZNv8Rqjke+doy9HbV8+MH92K/znVw9eB2a
      jnJ6LISmGexuq2ZPRw2HehuoKitB4dZt2m7v36db2Gw4yaWZKA8fHdh2G0fQ5+HPf/8e/tP/
      PkZFwMu7jvRd61rM5DSmQjEGpyK8MLJALJUlWOrhQHcd//a9d9BWV0apx7nt3lOhZAA2yDPn
      Z9nfVbfpXZ/rVV/p5zMffCOf/9avsdsUSj0uzk0sMTG/gqob7Gmv4cE7utjdVk11WSm2HbrC
      nwzABkjnVJ46M8WfvvvwVlflutrqy/jYuw/z1R+epMLvZaCrjnfc3UtLTQD3Nj94LRZ5DLAB
      fnlygidOT/FXH32znKG1zclvp8hMU/Cz58Y4erhTbvy3APkNFdngVJh0TuO23oatroq0DjIA
      RWQKweOnJrnvYDuBW6w/3KpkAIooEk9zYmie+w60bXVVpHWSASiin5+Y4FBvA7XlpVtdFWmd
      ZACKJJnOc3xwjre9zkrP0vYiA1AkL4wsUOJx0te6MRPepY0hA1AEumHyy5MTPHRXt+z6vMXI
      b6sIhmeirCSz3N7XuNVVkW6QDEARPH5qkiMDrZsy00oqLhmAm7SczHB2fJF797dtdVWkAsgA
      3AQhBI+dnGR3azWNVdtz1Kd0fTIAN0HVDY6dmeZtd3bt2OHCO50MwE147uI8XreDvg1a61Pa
      eAUGQBBbmmNxZRVh6lw8e4rFWJp0bIkXzl5EN/PE41mSK2Gy+s5coFXTDZ48PcVbbu/E6bBv
      dXWkAhU460EgDJ2UnsOVuIy/rY/F2SmiGOxqLWN8dhFWdVS7YG9FTXFrvE1MheJML8b55Afu
      2uqqSDehwADYqKgoY2XZIKdC0F9C2m5D2Ox4/WWIpXlmxmdoP3AQhEDfYesCCSH4yfER7t7b
      hNdlQ9PkJWRvVQUGQOPi+SFmUwaH93Vz7tlnKK9rIUiSZ39zll0H91PqrcVUI6TVKnxux46a
      ERaOpRmajvLpD70Rp7O4C0xJm2vbT4kUQvCdJwapDHi590AbbufWz1V99MlBRuaW+fQHj1x3
      SRFp+9v2356iKOxuq+bHvxnlM//rGBcml7a0PjlV5+lzs7z9rh658e8At8Q3ONBZy3//+FHu
      3d/KFx89zue/+WsWoqktqcvzl+ZxOmzskqM+d4Rt3wR6peVEhn9+ZoRnB2e5Z28L77inl8pA
      SZFqeX2mEHzm75/kDXuaefsbejalTGlj3RK/AC9VGSzhww/u59MffCNz4SSf+p9P8tgLk+Q1
      fcPLng7FmY+meNP+1g0vS9oct9wvwEuZpuDUyAL/8POz2O02PvLgAfZ11m5IV6sQgi9973k8
      Lgd//DsHd0R3rnSLB+AqVTc4dnqKf3xqiLa6Mn73/j10NVYUtYyVZJZPfuWXfO6j99FYHSjq
      a0tbZ0cE4KpYKsv3n77EsxfmuGN3I++7r58Kf3EuCfRPTw1xbnyRz370zUV5PWl72FEBgLWm
      ykI0xXeeGOTSTJR33dPLA4c68bgLP3+QzWv8h68+xsNHBzi8S8762kl2XACuEkJwdnyRbz12
      ASHg/W/u5/a+hoKuMHj84hzfeXyQL/6bt8iBbzvMjg3Ai+WaPHF6iu8eu0hrbZAPvnWAtrqy
      dT/fNAWPfO0Yh3obeNeRvg2sqbQVbrlu0Btlt9t44FAHf/vxo7TVlfEXX3uKL3//eVaS2XU9
      f2oxTjiWll2fO9SO/wV4pZmlOP94bIiR2ShH7+jirYe7rl0z9pWEEHz1BydRFOWGr6cl3Ros
      FwBYa9acn1ji6784h6Yb/MFbBjjUV/9bY3uS6Tx/8sX/x+f/+P4bajZJtw5LBuAqwzR55vwc
      X//FWWrKffzh0QF6miuvneT64a+HGZwK86k/OCLn/O5Qlg7AVemsyk+eG+Onz41xuK+R97xx
      F0Gfm09+5Zd86OgAd+5u2uoqShtEBuAKIQSReIZvPnaeoekIfS1VjF1e4av//kE57HkHkwF4
      BVMIRmeX+adfDXH33mbuO7D1V3iXNo4MgGRpcmuULO3mJ9iaaU48ew5/QzONfoXh2SgDB/pI
      xw0UPYG3sh6vQ/agSNvTTQfATC7hbtxFd0uA0UsX2ddbw/TMAmosh81XQn/N2gEmrP27SS0u
      SVqXmw6A8FRjW53i1FkIlDpwe0sQWoJoOER9+S4ATNO8ti6QDIC0ndx0APK5DNlMBm9ZLWWu
      HL85Psie2/cT8NWDFiWtmvjcayMo5UGwtN3IXiDJ0uTWKFmaDIBkaTIAkqXJAEiWJgMgWZoM
      gGRpW7/WuARAXtUZvbzMakalrb6MugqfXH1uE8gAbBEhBNFEhqHpCKdHFxmaieCw2Sj1OllO
      Zin3exjorOVAdz0ttUGCpW4ZiA0gT4RtIlUzCC2nODm8wOBUmPloCr/XxeFdjdzWW09DpR+P
      20EslWN8foUzoyEuTkfIqTottUEGOuvY311HTVkJXre8Mk0xyABsICEEqm4wOBnm5PACw7NR
      ookMu1qquKO/ib3tNVSXlV53vrFumFwOJxmejXJ6LMTFqQiBUjd72qvZ21HLvs5aAiXubT9n
      WQiBYQqS6Txz4QRz4STZvIbdZsPpsKHYFNzOtSEzNsWGy7m2nbgcdmyKgs2m4HLaAQWP68Wh
      NVef43GtNWYcdhsO+9pz3S4HVz8V5epfCtgUBUVZe74MwAaIJjKcGglxejTE8GyUUo+T/d11
      HO5rZHdb9ZUvsjCqZnBpJsKlmSinR0PMLCVoqQlwsLeB/rZqupsqtvzXwTQFqUye+WiKy5Ek
      04tx5iNJ5qMpEuk8teWltNaW4XU7MEyBphsA5DUDIQSmKdCMtcGTmn7lNsHLHgcv7mAAVHXt
      X8MU6FcGXqpXHmezKTivhKLU46Ii4KW2opSqQIkMQDHkNZ3pUJzToyHOjC2ynMxQV+nnYHc9
      h/rqqa/047Tbit6G1w2TVCbPhckwQ9MRzk8skclrdDdVcrCnnr6WKhqr/DcVuOsxTUEyk2c5
      kWFxJc30YpzZpQRz4QTpnEaJx0ldhY+O+jKaa4K01Aapq/DhdKztpV/r81gbNn/lbwRc+du8
      Nqz+5Y996X0vvf/qfS8N2WpWJRxLsxRPs5zIyAAUwjBNVjMqI3PLHL84x6WZKIqi0NVYzqHe
      BvZ21FLm9xS0DunNyOY1lmJpzo0vcW5ikelQHJ/Xxa62ag501dHTXEnQ577hSf6mKciqGqmM
      yvyVPfpUKM7lSJJMbu0SsZXBEtrrymis9tNaV0ZteSmlHhclnu19rCIDsA5X26/LiQwnhxc4
      ObzA5UiSQKmbg911HOipp7OhfMubHq+USOeYDsU5NRpicDJMOJ6mvb6c3VcC0dFY/rJfpqvv
      czWjMhdJMLuUvLZXT6RzpDIqVcES2urKaK4J0FZXRn2lj6pgCW7XrdmhKANwHTlVZ2J+hecv
      LXBqZIHlVJZ9HbXs7ajhYE89DVX+ra7iDYnE0wxNRzg1GmJkNko2r7Ovs5aOhnKS6Twzi3EW
      V9JEExkqg17a6spoqyujqSZAU1WAxmr/jlsdu6gB0LIp5qOrtDZXk8sKbCKP4i7FZVduKgCL
      K6vEUllM88WDHsMUaJqBgGvXB9N0E8Mw0U2BfuVxOc2AK3s2TTcwBahXHq/qazPVhHjFa5gm
      poCZxTjlfi/9bdXs766jv60ar8e56U2bYhNCoBsm04sJBqfCjMxGqS0vpbk2SEtNkKbqwOu2
      03eKogZg6NxpSkvt6CXVGEmDvJ5i1+5dOGyFB8A0BX/3oxc4P7GETVGuHdDZbAouh/1lXWFO
      hw27zfbyrjCnA0XhWnfbS1/D6bBjtymv+hqKotBU7aexOnCti03aeYoYAMHIyCjdXY2Mjc8w
      cWGSnjfcTVfD2rW6bsUmkLTzFXFrVCCf5MRzL1BSVU3PwO2o0TnSV/pnJWk7KmoTSJgmumni
      cNgRJigIUNaaGPIXQNqONrwXSAiBYRiYprl26nmTD6qEELLMHVZuMcvc8d2guq7jcGzuQexW
      lWm32zd1Y7y6c7uVP99Nq/lWNX22otytKNNu35r++Vv989202r9e8ye2vMRGHC+/2oelZ9Oc
      OP40g6MzV4eZkFpaYn2XzSuszJfLcurkIKYQjJ07TiTz2o8MLy2tq8wbaV5enrxEOPbq7zaZ
      TDB3+fK6y1zvxrganuLSTBSEyvPHT6Gv61mv7kYCsLQUvu7926aDO7OaAruT86PjNHXvJjE/
      Qkpz0dlchd1XSzoRQUtFWc7Y6WmuZCoUxR8so76qjGRGp6p8/WdlDV3H6y+jrrqC0NQIkYxC
      lV1j6vIs7S09mKkQeUoJBEqwmSoup4PhsWk6evtJR6bJmW5qGxpQMylqamoKeLcqmWSSWCJJ
      LBrG0ZhhbmiQ8oYOSkgTS5uU2rLEVA9GaoGpqTn23X4bXnsRmjemRmJVw24s4ja9TEzMUNXa
      jTOfIKU78TgM4okUzU3FvSqOYaiEI1EaHDGSmiARnWdiapGerhZUJYBdTVBWXUMx3uJLpVIp
      7KZJsL6K5dAyqeVFVrIKe3e3MnxpbHvMCRZCoOsamWScXC7D2OQcpqOE5koX0WiE1bzBUjhK
      PBYjcnmExfAyrqpmArY8o2MTmLYbH4NjmiamULlwYYhUPEJWs9M/sJ/lxcusJNI01ZazHIux
      HFkivhIjn00xMTtPbDVPZ3sDl6fGiaVyBb/n6qoKZqfGCVbWoK4myag6Y2NjRKMrtLU1sJIS
      9Pe04vVX0N8YYCVfcFEvk4kvMX05xMj4FMl0hp7de4lH5oksJ2lvbSSZSBSnoN9ip9KrMLxs
      0Bh0k4jFya3GmI1kic4NE46li77xCyHQdJ1YJIJmqoTDUXRbKW0BD+dHL7Kay22PX4CF6RHi
      eRdtARcudynByiBlJXZKHGD3GowOnSFQWYPDzFBR04AvUI6n3EfQ7uDixDl27/HcUHk2h4vm
      1nYqg0Ha2ptJ6W78ZR6GT52isa0PN3lcbhf5eJic4qUs6MLt9VNZ5sfnDuJwenEZGQLVPQW+
      YxfldfWI8BwNDdWkDBdxh4va8iBVFQE8Tjd+j87gyDS1lZW4XOAt0jelGjaO3Hc/6vICy7k0
      c2fO0tjdi0cxcdoVysrKMDdgv+j0+mls8RJaiFHmLcUkh8dfTrnfRz4boqS2t+hlzowOYtqD
      VFd7OH9qkLKKOsp9pZSg01lVytjoZf4/uNkxSNL9xTsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='dual axis' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='dual axis ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='heat' width='192'>
      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
      /wOUCml5zi5xAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='q11 groups' width='192'>
      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
      mWEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='q12' width='192'>
      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
      /kqcSTotAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='q23' width='192'>
      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
      B/1ajc1Br7MeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='q23 use web ' width='192'>
      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
      vjrjCDvbAxIA8Y3RGQNIJpMHLu21LKsnBLIrhPhG6VSHDhOPx7eeGl8q9QZAa02r1TrRC3wZ
      7exaE98MWuutIOiDJkoLEQHSBhCR1lMF2lhfxtt+vIwQUdATAM/zKA6PH3SsEN84UgUSkSYB
      EJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCR
      JgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYB
      EJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCR
      JgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYB
      EJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCR
      JgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYB
      EJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJFm7fxFa00Yhs/rWoT42imtte78Uiqt0265z/N6
      hPha9QRAiKiRNoCItP8PZpk0RLKPeFMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='q24' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q26.1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='q26.2' width='192'>
      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
      ZmHmSHb+fz1liu+weYJ4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='q26.3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATBUlEQVR4nO3dWWxc133H8e/MneXORg53ipRIcSe1ULZs2fGSxI3tFM7iIkbRNEDQImiD
      IC9N24e2KArEfQvy0va1C1A0QeEmgZ3AgbLbcVxJtuVaIkVxH5Iz3IbkcDgznH3u0gfZhmWZ
      lEyOhiPe/wcQRJ3hXP4h3t8959zljM00TRMhLMp+0AUIcZAqFgDTNJHORlSbigXAMAwJgKg6
      MgQSliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWtscAGIRn
      xhmfXcQ0DWbGR4mnC+S344yOz2JQYnu7QDa1RV6TG+BE9bLt6YEYUyO1nWctdB3FV4sZbCW1
      uogDjfaWALGSGzOlU6DI6RN92Gw2dF3HZrNht0unI6qHY0/vsjnIba0SLzqoc5ocaQxSjK2A
      3UmwsZmN0BJzU/P0PvQwAJqmYRjGjbfabGUrXoj92lsPUMzyzugYuVyenr5eJqdD1Da2U0OC
      lViKvjOnyW4a6IU1jnQP4Xcr0gOIqrS3AOyBBEBUI9kbhaVJAISlSQCEpUkAhKVJAISlSQCE
      pUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJ
      AISlSQCEpe05AInYKguLUUyzxNzUFIvRGMVsirmFZUw0stki+cw2RV1WhhPVa28LY1EindHR
      U1E21CJxPcBAwMfMzAQ1ARdzK6AndQp6hhMnBstbsRBltMcAOAn47OSMVoJuBxPxeWaMDD63
      j/aONmZCEULX5xh49DHsNlkZTlSvvQXAyPDGG1epa22h1tOGx2mnUCjgM3JcvLhM16nT9J9p
      oLi5SKahFr/bIQtjiaq0x8VxTUzTxOTdI7ppwrtH9htt737x3g+RxXFFldrj4rg2bDYbtg/8
      +/0vb/lCiOolh2NhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkS
      AGFpEgBhaRIAYWkSAGFpEgBhaRIAYWm7PhFm6Dm2Ehoeh46p+vC5nZWqS4iK2CUAGpd+9RKv
      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
    </thumbnail>
    <thumbnail height='192' name='rank functions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='tree' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
